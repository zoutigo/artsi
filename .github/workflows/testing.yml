name: phpunit
on: [push]

jobs:

  tests :
    name: Running functional and unit test
    runs-on: ubuntu-20.04
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: symfony
          MYSQL_DATABASE: symfony
        ports:
          - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        php-versions: ['7.4-apache']

    steps: 
      # —— Setup Github actions 🐙 —————————————————————————————————————————————
      # https://github.com/actions/checkout (official)
        - name: Checkout
          uses: actions/checkout@v2

      # https://github.com/shivammathur/setup-php (community)
        - name: Setup PHP, extensions and composer with shivammathur/setup-php
          uses: shivammathur/setup-php@v2
          with:
            php-version: ${{ matrix.php-versions }}
            extensions: mbstring, xml, ctype, iconv, intl, pdo, pdo_mysql, dom, filter, gd, iconv, json, mbstring, mysql
          env:
            update: true

        - name: Check PHP Version
          run: php -v

        - run: curl sSk https://getcomposer.org/installer | php -- --disable-tls && mv composer.phar /usr/local/bin/composer
        
        - run : sudo rm -rf /var/lib/apt/lists/lock
        - run: sudo apt -yqq update
        - run: sudo apt-get install -y zip  

        - name: Start mysql service
          run: sudo systemctl start mysql

          # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
        - name: Validate composer.json and composer.lock
          run: composer validate

        - name: Get composer cache directory
          id: composer-cache
          run: echo "::set-output name=dir::$(composer config cache-files-dir)"

        - name: Cache composer dependencies
          uses: actions/cache@v1
          with:
            path: ${{ steps.composer-cache.outputs.dir }}
            key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
            restore-keys: ${{ runner.os }}-composer-

        - name: Install Composer dependencies
          run: composer install

        - run: composer require symfony/runtime 

        - name: Run Migration && Load Fixtures
          run: |
            php bin/console doctrine:database:drop --if-exists --force --env=test
            php bin/console doctrine:database:create --if-not-exists --env=test
            php bin/console doctrine:migrations:migrate --env=test --no-interaction
            php bin/console doctrine:fixtures:load --no-interaction
          env:
           DATABASE_URL: mysql://root:symfony@127.0.0.1:${{ job.services.mysql.ports['3306'] }}/symfony
            
        

         ## —— NPM 🐱 ————————————————————————————————————————————————————————————
        - name: npm install
          uses: actions/setup-node@v2
          with:
            node-version: '14'
            #registry-url: npm.fontawesome.com
        - run: npm install
            #env:
          #NODE_AUTH_TOKEN: ${{ secrets.FONTAWESOME_NPM_AUTH_TOKEN }}


        - run: npm run build
        - run: php bin/phpunit